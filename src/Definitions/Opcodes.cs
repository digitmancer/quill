namespace Sonic.Definitions
{
  public static class Opcodes
  {
    public struct Instruction
    {
      public readonly Operation Operation;
      public readonly Operand Source;
      public readonly Operand Destination;

      public Instruction(Operation op, Operand src, Operand dst)
      {
        Operation = op;
        Source = src;
        Destination = dst;
      }

      public Instruction()
      {
        Operation = Operation.NOP;
        Source = Operand.Implied;
        Destination = Operand.Implied;
      }

      public bool IsWordOperation() => _wordOperands.Contains(Source) ||
                                       _wordOperands.Contains(Destination);
    }

    public static Instruction Decode(byte[] op) => GetOpcodeTable(op[0], op[1])[op[2]];
    public static Instruction Decode(byte[] prefix, byte op) => GetOpcodeTable(prefix[0], prefix[1])[op];
    public static Instruction Decode(byte p0, byte p1, byte op) => GetOpcodeTable(p0, p1)[op];
    public static bool IsPrefix(byte op) => _opcodePrefixes.Contains(op);

    
    private static readonly byte[] _opcodePrefixes = new byte[]
    { 
      0xCB,
      0xDD, 
      0xED,
      0xFD 
    };
    
    private static Operand[] _wordOperands = new Operand[]
    {      
      Operand.AF, 
      Operand.BC, 
      Operand.DE, 
      Operand.HL, 
      Operand.IX,  
      Operand.IY, 
      Operand.PC,
      Operand.SP
    };
  
    public static Instruction[] GetOpcodeTable(byte prefix0, byte prefix1) => new { prefix0, prefix1 } switch
    {
      { prefix0: 0x00 } =>                _mainInstructions,
      { prefix0: 0xCB } =>                _bitInstructions,
      { prefix0: 0xDD, prefix1: 0xCB } => _ixBitInstructions,
      { prefix0: 0xFD, prefix1: 0xCB } => _iyBitInstructions,
      { prefix0: 0xDD } =>                _ixInstructions,
      { prefix0: 0xED } =>                _miscInstructions,
      { prefix0: 0xFD } =>                _iyInstructions,
      _ => throw new InvalidOperationException()
    };

    private static readonly Instruction[] _mainInstructions = new Instruction[]
    {
      // Opcodes 0x00 - 0x0F
      new Instruction(Operation.NOP,  Operand.Implied,    Operand.Implied),
      new Instruction(Operation.LD,   Operand.BC,         Operand.Immediate),  
      new Instruction(Operation.LD,   Operand.BCi,        Operand.A),
      new Instruction(Operation.INC,  Operand.BC,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.B,          Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.B,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.B,          Operand.Immediate),  
      new Instruction(Operation.RLCA, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.EX,   Operand.AF,         Operand.Implied),  
      new Instruction(Operation.ADD,  Operand.HL,         Operand.BC),  
      new Instruction(Operation.LD,   Operand.A,          Operand.BCi),  
      new Instruction(Operation.DEC,  Operand.BC,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.C,          Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.C,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.C,          Operand.Immediate),  
      new Instruction(Operation.RRCA, Operand.Implied,    Operand.Implied), 

      // Opcodes 0x10 - 0x1F
      new Instruction(Operation.DJNZ, Operand.D,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.DE,         Operand.Immediate),  
      new Instruction(Operation.LD,   Operand.DEi,        Operand.A),  
      new Instruction(Operation.INC,  Operand.DE,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.D,          Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.D,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.D,          Operand.Immediate),  
      new Instruction(Operation.RLA,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.JR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.ADD,  Operand.HL,         Operand.DE),  
      new Instruction(Operation.LD,   Operand.A,          Operand.DEi),  
      new Instruction(Operation.DEC,  Operand.DE,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.E,          Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.E,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.E,          Operand.Immediate),  
      new Instruction(Operation.RRA,  Operand.Implied,    Operand.Implied),

      // Opcodes 0x20 - 0x2F
      new Instruction(Operation.JR,   Operand.NonZero,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.DE,         Operand.Immediate),  
      new Instruction(Operation.LD,   Operand.DEi,        Operand.A),  
      new Instruction(Operation.INC,  Operand.DE,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.D,          Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.D,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.D,          Operand.Immediate),  
      new Instruction(Operation.DAA,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.JR,   Operand.Zero,       Operand.Implied),  
      new Instruction(Operation.ADD,  Operand.HL,         Operand.HL),  
      new Instruction(Operation.LD,   Operand.HL,         Operand.Indirect),  
      new Instruction(Operation.DEC,  Operand.HL,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.L,          Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.L,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.L,          Operand.Implied),  
      new Instruction(Operation.CPL,  Operand.Implied,    Operand.Implied), 
        
      // Opcodes 0x30 - 0x3F  
      new Instruction(Operation.JR,   Operand.NonCarry,   Operand.Implied),  
      new Instruction(Operation.LD,   Operand.SP,         Operand.Immediate),  
      new Instruction(Operation.LD,   Operand.Indirect,   Operand.A),  
      new Instruction(Operation.INC,  Operand.SP,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.HLi,        Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.HLi,        Operand.Implied),  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.Immediate),  
      new Instruction(Operation.SCF,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.JR,   Operand.C,          Operand.Implied),  
      new Instruction(Operation.ADD,  Operand.HL,         Operand.SP),  
      new Instruction(Operation.LD,   Operand.A,          Operand.Indirect),  
      new Instruction(Operation.DEC,  Operand.SP,         Operand.Implied),  
      new Instruction(Operation.INC,  Operand.A,          Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.A,          Operand.Implied),  
      new Instruction(Operation.LD,   Operand.A,          Operand.Immediate),  
      new Instruction(Operation.CCF,  Operand.Implied,    Operand.Implied),   
      
      // Opcodes 0x40 - 0x4F
      new Instruction(),
      new Instruction(Operation.LD,   Operand.B,          Operand.C),  
      new Instruction(Operation.LD,   Operand.B,          Operand.D),  
      new Instruction(Operation.LD,   Operand.B,          Operand.E),  
      new Instruction(Operation.LD,   Operand.B,          Operand.H),  
      new Instruction(Operation.LD,   Operand.B,          Operand.L),   
      new Instruction(Operation.LD,   Operand.B,          Operand.HLi),  
      new Instruction(Operation.LD,   Operand.B,          Operand.A),  
      new Instruction(Operation.LD,   Operand.C,          Operand.B),  
      new Instruction(),
      new Instruction(Operation.LD,   Operand.C,          Operand.D),  
      new Instruction(Operation.LD,   Operand.C,          Operand.E),  
      new Instruction(Operation.LD,   Operand.C,          Operand.H),  
      new Instruction(Operation.LD,   Operand.C,          Operand.L),  
      new Instruction(Operation.LD,   Operand.C,          Operand.HLi),  
      new Instruction(Operation.LD,   Operand.C,          Operand.A),

      // Opcodes 0x50 - 0x5F  
      new Instruction(Operation.LD,   Operand.D,          Operand.B),  
      new Instruction(Operation.LD,   Operand.D,          Operand.C),  
      new Instruction(),
      new Instruction(Operation.LD,   Operand.D,          Operand.E),  
      new Instruction(Operation.LD,   Operand.D,          Operand.H),  
      new Instruction(Operation.LD,   Operand.D,          Operand.L),  
      new Instruction(Operation.LD,   Operand.D,          Operand.HLi),  
      new Instruction(Operation.LD,   Operand.D,          Operand.A),  
      new Instruction(Operation.LD,   Operand.E,          Operand.B),  
      new Instruction(Operation.LD,   Operand.E,          Operand.C),  
      new Instruction(Operation.LD,   Operand.E,          Operand.D),  
      new Instruction(),
      new Instruction(Operation.LD,   Operand.E,          Operand.H),  
      new Instruction(Operation.LD,   Operand.E,          Operand.L),  
      new Instruction(Operation.LD,   Operand.E,          Operand.HLi),  
      new Instruction(Operation.LD,   Operand.E,          Operand.A),  

      // Opcodes 0x60 - 0x6F  
      new Instruction(Operation.LD,   Operand.H,          Operand.B),  
      new Instruction(Operation.LD,   Operand.H,          Operand.C),  
      new Instruction(Operation.LD,   Operand.H,          Operand.D),  
      new Instruction(Operation.LD,   Operand.H,          Operand.E),  
      new Instruction(),
      new Instruction(Operation.LD,   Operand.H,          Operand.L),  
      new Instruction(Operation.LD,   Operand.H,          Operand.HLi),  
      new Instruction(Operation.LD,   Operand.H,          Operand.A),  
      new Instruction(Operation.LD,   Operand.L,          Operand.B),  
      new Instruction(Operation.LD,   Operand.L,          Operand.C),  
      new Instruction(Operation.LD,   Operand.L,          Operand.D),  
      new Instruction(Operation.LD,   Operand.L,          Operand.E),  
      new Instruction(Operation.LD,   Operand.L,          Operand.H),  
      new Instruction(),
      new Instruction(Operation.LD,   Operand.L,          Operand.HLi),  
      new Instruction(Operation.LD,   Operand.L,          Operand.A),  

      // Opcodes 0x70 - 0x7F  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.B),  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.C),  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.D),  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.E),  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.H),  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.L),  
      new Instruction(Operation.HALT, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.HLi,        Operand.A),  
      new Instruction(Operation.LD,   Operand.A,          Operand.B),  
      new Instruction(Operation.LD,   Operand.A,          Operand.C),  
      new Instruction(Operation.LD,   Operand.A,          Operand.D),  
      new Instruction(Operation.LD,   Operand.A,          Operand.E),  
      new Instruction(Operation.LD,   Operand.A,          Operand.H),  
      new Instruction(Operation.LD,   Operand.A,          Operand.L),   
      new Instruction(Operation.LD,   Operand.A,          Operand.HLi),  
      new Instruction(),

      // Opcodes 0x80 - 0x8F  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.B),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.C),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.D),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.E),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.H),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.L),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.HLi),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.A),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.B),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.C),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.D),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.E),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.H),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.L),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.HLi),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.A),  

      // Opcodes 0x90 - 0x9F  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.B),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.C),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.D),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.E),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.H),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.L),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.HLi),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.A), 
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.B),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.C),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.D),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.E),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.H),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.L),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.HLi),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.A),

      // Opcodes 0xA0 - 0xAF  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.B),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.C),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.D),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.E),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.H),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.L),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.HLi),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.A),
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.B),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.C),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.D),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.E),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.H),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.L),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.HLi),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.A),

      // Opcodes 0xB0 - 0xBF  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied), 
      new Instruction(Operation.CP,   Operand.Implied,    Operand.B),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.C),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.D),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.E),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.H),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.L),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.HLi),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.A),

      // Opcodes 0xC0 - 0xCF  
      new Instruction(Operation.RET,  Operand.NonZero,    Operand.Implied),  
      new Instruction(Operation.POP,  Operand.BC,         Operand.Implied),  
      new Instruction(Operation.JP,   Operand.NonZero,    Operand.Immediate),  
      new Instruction(Operation.JP,   Operand.Implied,    Operand.Immediate),  
      new Instruction(Operation.CALL, Operand.NonZero,    Operand.Immediate),  
      new Instruction(Operation.PUSH, Operand.Implied,    Operand.BC),  
      new Instruction(Operation.ADD,  Operand.A,          Operand.Immediate),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST0),  
      new Instruction(Operation.RET,  Operand.Zero,       Operand.Implied),  
      new Instruction(Operation.RET,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.JP,   Operand.Zero,       Operand.Immediate),  
      new Instruction(Operation.NOP,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CALL, Operand.Zero,       Operand.Immediate),  
      new Instruction(Operation.CALL, Operand.Implied,    Operand.Immediate),  
      new Instruction(Operation.ADC,  Operand.A,          Operand.Immediate),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST1),

      // Opcodes 0xD0 - 0xDF  
      new Instruction(Operation.RET,  Operand.NonCarry,   Operand.Implied),  
      new Instruction(Operation.POP,  Operand.DE,         Operand.Implied),  
      new Instruction(Operation.JP,   Operand.NonCarry,   Operand.Immediate),  
      new Instruction(Operation.OUT,  Operand.Immediate,  Operand.A),  
      new Instruction(Operation.CALL, Operand.NonCarry,   Operand.Immediate),  
      new Instruction(Operation.PUSH, Operand.Implied,    Operand.DE),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.Immediate),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST2),
      new Instruction(Operation.RET,  Operand.Carry,      Operand.Implied),  
      new Instruction(Operation.EXX,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.JP,   Operand.Carry,      Operand.Immediate),  
      new Instruction(Operation.IN,   Operand.A,          Operand.Immediate),  
      new Instruction(Operation.CALL, Operand.Carry,      Operand.Immediate),  
      new Instruction(Operation.NOP,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.SBC,  Operand.A,          Operand.Immediate),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST3),

      // Opcodes 0xE0 - 0xEF  
      new Instruction(Operation.RET,  Operand.Even,       Operand.Implied),  
      new Instruction(Operation.POP,  Operand.HL,         Operand.Implied),  
      new Instruction(Operation.JP,   Operand.Even,       Operand.Immediate),  
      new Instruction(Operation.EX,   Operand.SP,         Operand.HL),  
      new Instruction(Operation.CALL, Operand.Even,       Operand.Immediate),  
      new Instruction(Operation.PUSH, Operand.Implied,    Operand.HL),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST4),
      new Instruction(Operation.RET,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.JP,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.JP,   Operand.Even,       Operand.Immediate),  
      new Instruction(Operation.EX,   Operand.DE,         Operand.HL),  
      new Instruction(Operation.CALL, Operand.Even,       Operand.Immediate),  
      new Instruction(Operation.NOP,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.Immediate),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST5),

      // Opcodes 0xF0 - 0xFF  
      new Instruction(Operation.RET,  Operand.Positive,   Operand.Implied),  
      new Instruction(Operation.POP,  Operand.AF,         Operand.Implied),  
      new Instruction(Operation.JP,   Operand.Positive,   Operand.Immediate),  
      new Instruction(Operation.DI,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CALL, Operand.Positive,   Operand.Immediate),  
      new Instruction(Operation.PUSH, Operand.Implied,    Operand.AF),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Immediate),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST6), 
      new Instruction(Operation.RET,  Operand.Negative,   Operand.Implied),  
      new Instruction(Operation.LD,   Operand.SP,         Operand.HL),  
      new Instruction(Operation.JP,   Operand.Negative,   Operand.Implied),  
      new Instruction(Operation.EI,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CALL, Operand.Negative,   Operand.Immediate),  
      new Instruction(Operation.NOP,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.Immediate),  
      new Instruction(Operation.RST,  Operand.Implied,    Operand.RST7),
    };

    private static readonly Instruction[] _bitInstructions = new Instruction[]
    {
      // Opcodes 0x00 - 0x0F
      new Instruction(Operation.RLC,  Operand.B,          Operand.Implied),
      new Instruction(Operation.RLC,  Operand.C,          Operand.Implied),  
      new Instruction(Operation.RLC,  Operand.D,          Operand.Implied),
      new Instruction(Operation.RLC,  Operand.E,          Operand.Implied),  
      new Instruction(Operation.RLC,  Operand.H,          Operand.Implied),  
      new Instruction(Operation.RLC,  Operand.L,          Operand.Implied),  
      new Instruction(Operation.RLC,  Operand.HLi,        Operand.Implied),  
      new Instruction(Operation.RLC,  Operand.A,          Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.B,          Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.C,          Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.D,          Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.E,          Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.H,          Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.L,          Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.HLi,        Operand.Implied),  
      new Instruction(Operation.RRC,  Operand.A,          Operand.Implied), 

      // Opcodes 0x10 - 0x1F
      new Instruction(Operation.RL,   Operand.B,          Operand.Implied),
      new Instruction(Operation.RL,   Operand.C,          Operand.Implied),
      new Instruction(Operation.RL,   Operand.D,          Operand.Implied),
      new Instruction(Operation.RL,   Operand.E,          Operand.Implied),
      new Instruction(Operation.RL,   Operand.H,          Operand.Implied),
      new Instruction(Operation.RL,   Operand.L,          Operand.Implied),
      new Instruction(Operation.RL,   Operand.HLi,        Operand.Implied),
      new Instruction(Operation.RL,   Operand.A,          Operand.Implied),
      new Instruction(Operation.RR,   Operand.B,          Operand.Implied),
      new Instruction(Operation.RR,   Operand.C,          Operand.Implied),
      new Instruction(Operation.RR,   Operand.D,          Operand.Implied),
      new Instruction(Operation.RR,   Operand.E,          Operand.Implied),
      new Instruction(Operation.RR,   Operand.H,          Operand.Implied),
      new Instruction(Operation.RR,   Operand.L,          Operand.Implied),
      new Instruction(Operation.RR,   Operand.HLi,        Operand.Implied),
      new Instruction(Operation.RR,   Operand.A,          Operand.Implied),
 
      // Opcodes 0x20 - 0x2F 
      new Instruction(Operation.SLA,  Operand.B,          Operand.Implied),  
      new Instruction(Operation.SLA,  Operand.C,          Operand.Implied),  
      new Instruction(Operation.SLA,  Operand.D,          Operand.Implied),
      new Instruction(Operation.SLA,  Operand.E,          Operand.Implied), 
      new Instruction(Operation.SLA,  Operand.H,          Operand.Implied), 
      new Instruction(Operation.SLA,  Operand.L,          Operand.Implied), 
      new Instruction(Operation.SLA,  Operand.HLi,        Operand.Implied),
      new Instruction(Operation.SLA,  Operand.A,          Operand.Implied), 
      new Instruction(Operation.SRA,  Operand.B,          Operand.Implied),  
      new Instruction(Operation.SRA,  Operand.C,          Operand.Implied),
      new Instruction(Operation.SRA,  Operand.D,          Operand.Implied),
      new Instruction(Operation.SRA,  Operand.E,          Operand.Implied), 
      new Instruction(Operation.SRA,  Operand.H,          Operand.Implied), 
      new Instruction(Operation.SRA,  Operand.L,          Operand.Implied), 
      new Instruction(Operation.SRA,  Operand.HLi,        Operand.Implied), 
      new Instruction(Operation.SRA,  Operand.A,          Operand.Implied),
        
      // Opcodes 0x30 - 0x3F  
      new Instruction(Operation.SLL,  Operand.B,          Operand.Implied),
      new Instruction(Operation.SLL,  Operand.C,          Operand.Implied),
      new Instruction(Operation.SLL,  Operand.D,          Operand.Implied),
      new Instruction(Operation.SLL,  Operand.E,          Operand.Implied),
      new Instruction(Operation.SLL,  Operand.H,          Operand.Implied),
      new Instruction(Operation.SLL,  Operand.L,          Operand.Implied),
      new Instruction(Operation.SLL,  Operand.HLi,        Operand.Implied),
      new Instruction(Operation.SLL,  Operand.A,          Operand.Implied),
      new Instruction(Operation.SRL,  Operand.B,          Operand.Implied),
      new Instruction(Operation.SRL,  Operand.C,          Operand.Implied),
      new Instruction(Operation.SRL,  Operand.D,          Operand.Implied),
      new Instruction(Operation.SRL,  Operand.E,          Operand.Implied),
      new Instruction(Operation.SRL,  Operand.H,          Operand.Implied),
      new Instruction(Operation.SRL,  Operand.L,          Operand.Implied),
      new Instruction(Operation.SRL,  Operand.HLi,        Operand.Implied),
      new Instruction(Operation.SRL,  Operand.A,          Operand.Implied),
      
      // Opcodes 0x40 - 0x4F 
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.B),   
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.C),   
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.D),   
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.E),   
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.H),   
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.L),   
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.HLi), 
      new Instruction(Operation.BIT,  Operand.Bit0,       Operand.A),   
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.B),   
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.C),   
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.D),   
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.E),   
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.H),   
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.L),   
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.HLi), 
      new Instruction(Operation.BIT,  Operand.Bit1,       Operand.A),   
      
      // Opcodes 0x50 - 0x5F 
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.B),   
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.C),   
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.D),   
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.E),   
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.H),   
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.L),   
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.HLi), 
      new Instruction(Operation.BIT,  Operand.Bit2,       Operand.A),   
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.B),   
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.C),   
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.D),   
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.E),   
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.H),   
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.L),   
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.HLi), 
      new Instruction(Operation.BIT,  Operand.Bit3,       Operand.A),   
      
      // Opcodes 0x60 - 0x6F 
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.B),   
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.C),   
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.D),   
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.E),   
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.H),   
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.L),   
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.HLi), 
      new Instruction(Operation.BIT,  Operand.Bit4,       Operand.A),   
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.B),   
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.C),   
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.D),   
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.E),   
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.H),   
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.L),   
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.HLi), 
      new Instruction(Operation.BIT,  Operand.Bit5,       Operand.A),   
      
      // Opcodes 0x70 - 0x7F 
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.B),  
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.C),  
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.D),  
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.E),  
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.H),  
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.L),  
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.Implied),  
      new Instruction(Operation.BIT,  Operand.Bit6,       Operand.A),  
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.B),  
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.C),  
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.D),  
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.E),  
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.H),  
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.L),   
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.HLi),  
      new Instruction(Operation.BIT,  Operand.Bit7,       Operand.Implied),
      
      // Opcodes 0x80 - 0x8F 
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.B),   
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.C),   
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.D),   
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.E),   
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.H),   
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.L),   
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.HLi), 
      new Instruction(Operation.RES,  Operand.Bit0,       Operand.A),   
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.B),   
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.C),   
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.D),   
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.E),   
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.H),   
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.L),   
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.HLi), 
      new Instruction(Operation.RES,  Operand.Bit1,       Operand.A),   

      // Opcodes 0x90 - 0x9F 
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.B),   
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.C),   
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.D),   
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.E),   
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.H),   
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.L),   
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.HLi), 
      new Instruction(Operation.RES,  Operand.Bit2,       Operand.A),   
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.B),   
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.C),   
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.D),   
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.E),   
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.H),   
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.L),   
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.HLi), 
      new Instruction(Operation.RES,  Operand.Bit3,       Operand.A),   
      
      // Opcodes 0xA0 - 0xAF 
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.B),   
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.C),   
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.D),   
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.E),   
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.H),   
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.L),   
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.HLi), 
      new Instruction(Operation.RES,  Operand.Bit4,       Operand.A),   
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.B),   
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.C),   
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.D),   
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.E),   
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.H),   
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.L),   
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.HLi), 
      new Instruction(Operation.RES,  Operand.Bit5,       Operand.A),   

      // Opcodes 0xB0 - 0xBF 
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.B),  
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.C),  
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.D),  
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.E),  
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.H),  
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.L),  
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.HLi),
      new Instruction(Operation.RES,  Operand.Bit6,       Operand.A),  
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.B),  
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.C),  
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.D),  
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.E),  
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.H),  
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.L),   
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.HLi),  
      new Instruction(Operation.RES,  Operand.Bit7,       Operand.A),

      // Opcodes 0xC0 - 0xCF 
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.B),   
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.C),   
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.D),   
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.E),   
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.H),   
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.L),   
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.HLi), 
      new Instruction(Operation.SET,  Operand.Bit0,       Operand.A),   
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.B),   
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.C),   
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.D),   
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.E),   
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.H),   
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.L),   
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.HLi), 
      new Instruction(Operation.SET,  Operand.Bit1,       Operand.A),   

      // Opcodes 0xD0 - 0xDF 
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.B),   
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.C),   
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.D),   
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.E),   
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.H),   
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.L),   
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.HLi), 
      new Instruction(Operation.SET,  Operand.Bit2,       Operand.A),   
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.B),   
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.C),   
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.D),   
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.E),   
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.H),   
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.L),   
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.HLi), 
      new Instruction(Operation.SET,  Operand.Bit3,       Operand.A),   

      // Opcodes 0xE0 - 0xEF 
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.B),   
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.C),   
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.D),   
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.E),   
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.H),   
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.L),   
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.HLi), 
      new Instruction(Operation.SET,  Operand.Bit4,       Operand.A),   
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.B),   
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.C),   
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.D),   
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.E),   
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.H),   
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.L),   
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.HLi), 
      new Instruction(Operation.SET,  Operand.Bit5,       Operand.A),   

      // Opcodes 0xF0 - 0xFF 
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.B),  
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.C),  
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.D),  
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.E),  
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.H),  
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.L),  
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.HLi),
      new Instruction(Operation.SET,  Operand.Bit6,       Operand.A),  
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.B),  
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.C),  
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.D),  
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.E),  
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.H),  
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.L),   
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.HLi),  
      new Instruction(Operation.SET,  Operand.Bit7,       Operand.A)
    };

    private static readonly Instruction[] _ixInstructions = new Instruction[]
    {
      // Opcodes 0x00 - 0x0F
      new Instruction(),
      new Instruction(),  
      new Instruction(),
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.IX,         Operand.BC),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(), 
  
      // Opcodes 0x10 - 0x1F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADD,  Operand.IX,         Operand.DE),  
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),

      // Opcodes 0x20 - 0x2F
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.IX,         Operand.Immediate),  
      new Instruction(Operation.LD,   Operand.Indirect,   Operand.IX),
      new Instruction(Operation.INC,  Operand.IX,         Operand.Implied), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),
      new Instruction(), 
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.IX,         Operand.IX),  
      new Instruction(Operation.LD,   Operand.IX,         Operand.Indirect),
      new Instruction(Operation.DEC,  Operand.IX,         Operand.Implied), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),

      // Opcodes 0x30 - 0x3F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.INC,  Operand.IXd,        Operand.Implied),
      new Instruction(Operation.DEC,  Operand.IXd,        Operand.Implied),
      new Instruction(Operation.LD,   Operand.IXd,        Operand.Immediate),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADD,  Operand.IX,         Operand.SP),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),

      // Opcodes 0x40 - 0x4F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.B,          Operand.IXd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.C,          Operand.IXd),
      new Instruction(),

      // Opcodes 0x50 - 0x5F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.D,          Operand.IXd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.E,          Operand.IXd),
      new Instruction(),

      // Opcodes 0x60 - 0x6F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.H,          Operand.IXd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.L,          Operand.IXd),
      new Instruction(),

      // Opcodes 0x70 - 0x7F
      new Instruction(Operation.LD,   Operand.IXd,        Operand.B),  
      new Instruction(Operation.LD,   Operand.IXd,        Operand.C),  
      new Instruction(Operation.LD,   Operand.IXd,        Operand.D),  
      new Instruction(Operation.LD,   Operand.IXd,        Operand.E),  
      new Instruction(Operation.LD,   Operand.IXd,        Operand.H),  
      new Instruction(Operation.LD,   Operand.IXd,        Operand.L),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.IXd,        Operand.A),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.A,          Operand.IXd),  
      new Instruction(),

      // Opcodes 0x80 - 0x8F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADD,  Operand.A,          Operand.IXd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADC,  Operand.A,          Operand.IXd),
      new Instruction(),

      // Opcodes 0x90 - 0x9F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.IXd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.SBC,  Operand.A,          Operand.IXd),
      new Instruction(),

      // Opcodes 0xA0 - 0xAF
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.AND,  Operand.Implied,    Operand.IXd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.IXd),
      new Instruction(),

      // Opcodes 0xB0 - 0xBF
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.OR,   Operand.Implied,    Operand.IXd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.CP,   Operand.Implied,    Operand.IXd),
      new Instruction(),

      // Opcodes 0xC0 - 0xCF
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),

      // Opcodes 0xD0 - 0xDF
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),

      // Opcodes 0xE0 - 0xEF
      new Instruction(),
      new Instruction(Operation.POP,   Operand.IX,         Operand.Implied),
      new Instruction(),
      new Instruction(Operation.EX,    Operand.SP,         Operand.IX),
      new Instruction(),
      new Instruction(Operation.PUSH,  Operand.Implied,    Operand.IX),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.JP,    Operand.Implied,    Operand.IX),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),

      // Opcodes 0xF0 - 0xFF
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,    Operand.SP,         Operand.IX),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction()
    };
    
    private static readonly Instruction[] _ixBitInstructions = new Instruction[]
    {// Opcodes 0x00 - 0x0F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x10 - 0x1F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x20 - 0x2F
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.INC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x30 - 0x3F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.INC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x40 - 0x4F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x50 - 0x5F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x60 - 0x6F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x70 - 0x7F
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x80 - 0x8F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x90 - 0x9F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0xA0 - 0xAF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0xB0 - 0xBF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0xC0 - 0xCF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0xD0 - 0xDF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0xE0 - 0xEF
      new Instruction(),  
      new Instruction(Operation.POP,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.EX,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.PUSH, Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.JP,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0xF0 - 0xFF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction()
    };
    
    private static readonly Instruction[] _miscInstructions = new Instruction[]
    {
      // Opcodes 0x00 - 0x0F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),
      
      // Opcodes 0x10 - 0x1F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),

      // Opcodes 0x20 - 0x2F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),

      // Opcodes 0x30 - 0x3F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),

      // Opcodes 0x40 - 0x4F
      new Instruction(Operation.IN,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OUT,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.NEG,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.RETN, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.IM,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.IN,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OUT,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.RETI, Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),

      // Opcodes 0x50 - 0x5F
      new Instruction(Operation.IN,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.IM,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.IN,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OUT,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.IM,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),

      // Opcodes 0x60 - 0x6F
      new Instruction(Operation.IN,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.RRD,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.IN,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OUT,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.RLD,  Operand.Implied,    Operand.Implied),

      // Opcodes 0x70 - 0x7F
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.IN,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OUT,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),

      // Opcodes 0x80 - 0x8F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),

      // Opcodes 0x90 - 0x9F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),

      // Opcodes 0xA0 - 0xAF
      new Instruction(Operation.LDI,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CPI,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.INI,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OUTI, Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LDD,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CPD,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.IND,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OUTD, Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),

      // Opcodes 0xB0 - 0xBF
      new Instruction(Operation.LDIR, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CPIR, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.INIR, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OTIR, Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LDDR, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.CPDR, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.INDR, Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.OTDR, Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction()
    };
    
    private static readonly Instruction[] _iyInstructions = new Instruction[]
    {
      // Opcodes 0x00 - 0x0F
      new Instruction(),
      new Instruction(),  
      new Instruction(),
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.IY,         Operand.BC),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(), 
  
      // Opcodes 0x10 - 0x1F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADD,  Operand.IY,         Operand.DE),  
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),

      // Opcodes 0x20 - 0x2F
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.IY,         Operand.Immediate),  
      new Instruction(Operation.LD,   Operand.Indirect,   Operand.IY),
      new Instruction(Operation.INC,  Operand.IY,         Operand.Implied), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),
      new Instruction(), 
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.IY,         Operand.IY),  
      new Instruction(Operation.LD,   Operand.IY,         Operand.Indirect),
      new Instruction(Operation.DEC,  Operand.IY,         Operand.Implied), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),

      // Opcodes 0x30 - 0x3F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.INC,  Operand.IYd,        Operand.Implied),
      new Instruction(Operation.DEC,  Operand.IYd,        Operand.Implied),
      new Instruction(Operation.LD,   Operand.IYd,        Operand.Immediate),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADD,  Operand.IY,         Operand.SP),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),

      // Opcodes 0x40 - 0x4F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.B,          Operand.IYd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.C,          Operand.IYd),
      new Instruction(),

      // Opcodes 0x50 - 0x5F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.D,          Operand.IYd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.E,          Operand.IYd),
      new Instruction(),

      // Opcodes 0x60 - 0x6F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.H,          Operand.IYd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.L,          Operand.IYd),
      new Instruction(),

      // Opcodes 0x70 - 0x7F
      new Instruction(Operation.LD,   Operand.IYd,        Operand.B),  
      new Instruction(Operation.LD,   Operand.IYd,        Operand.C),  
      new Instruction(Operation.LD,   Operand.IYd,        Operand.D),  
      new Instruction(Operation.LD,   Operand.IYd,        Operand.E),  
      new Instruction(Operation.LD,   Operand.IYd,        Operand.H),  
      new Instruction(Operation.LD,   Operand.IYd,        Operand.L),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.IYd,        Operand.A),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.A,          Operand.IYd),  
      new Instruction(),

      // Opcodes 0x80 - 0x8F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADD,  Operand.A,          Operand.IYd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.ADC,  Operand.A,          Operand.IYd),
      new Instruction(),

      // Opcodes 0x90 - 0x9F
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.IYd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.SBC,  Operand.A,          Operand.IYd),
      new Instruction(),

      // Opcodes 0xA0 - 0xAF
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.AND,  Operand.Implied,    Operand.IYd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.IYd),
      new Instruction(),

      // Opcodes 0xB0 - 0xBF
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.OR,   Operand.Implied,    Operand.IYd),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.CP,   Operand.Implied,    Operand.IYd),
      new Instruction(),

      // Opcodes 0xC0 - 0xCF
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),

      // Opcodes 0xD0 - 0xDF
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(), 
      new Instruction(),

      // Opcodes 0xE0 - 0xEF
      new Instruction(),
      new Instruction(Operation.POP,  Operand.IY,         Operand.Implied),
      new Instruction(),
      new Instruction(Operation.EX,   Operand.SP,         Operand.IY),
      new Instruction(),
      new Instruction(Operation.PUSH, Operand.Implied,    Operand.IY),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.JP,   Operand.Implied,    Operand.IY),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),

      // Opcodes 0xF0 - 0xFF
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(Operation.LD,   Operand.SP,         Operand.IY),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction(),
      new Instruction()
    };
    
    private static readonly Instruction[] _iyBitInstructions = new Instruction[]
    {
      // Opcodes 0x00 - 0x0F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x10 - 0x1F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x20 - 0x2F
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.INC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x30 - 0x3F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.INC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.DEC,  Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0x40 - 0x4F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x50 - 0x5F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x60 - 0x6F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x70 - 0x7F
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x80 - 0x8F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADD,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.ADC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0x90 - 0x9F
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.SUB,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.SBC,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0xA0 - 0xAF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.AND,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.XOR,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0xB0 - 0xBF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.OR,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.CP,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  

      // Opcodes 0xC0 - 0xCF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0xD0 - 0xDF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0xE0 - 0xEF
      new Instruction(),  
      new Instruction(Operation.POP,  Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.EX,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(Operation.PUSH, Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.JP,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  

      // Opcodes 0xF0 - 0xFF
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(Operation.LD,   Operand.Implied,    Operand.Implied),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction(),  
      new Instruction()
    };
  }
}